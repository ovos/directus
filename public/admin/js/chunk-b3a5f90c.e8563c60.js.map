{"version":3,"sources":["webpack:///./src/interfaces/checkboxes/input.vue?9b6b","webpack:///src/interfaces/checkboxes/input.vue","webpack:///./src/interfaces/checkboxes/input.vue?9cec","webpack:///./src/interfaces/checkboxes/input.vue","webpack:///./src/interfaces/checkboxes/input.vue?4cc8","webpack:///./src/interfaces/checkboxes/input.vue?4039","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","draggable","options","single","attrs","element","animation","ghost-class","on","end","saveSort","model","value","callback","$$v","sortableList","expression","_l","item","key","id","sortable","checked","customChecked","click","toggleCustom","name","placeholder","$t","domProps","customValue","input","updateCustom","val","disabled","readonly","label","selection","includes","change","$event","updateValue","staticRenderFns","inputvue_type_script_lang_js_","mixins","interface_default","a","data","computed","_","clone","split","wrap","pop","shift","created","sortableOptions","_this","Object","keys","choices","map","allow_other","filter","selected","optionsWithoutSelection","option","concat","toConsumableArray","objectSpread","shortid_default","generate","custom","push","methods","splice","indexOf","$emit","_this2","staged","s","event","currentValue","newValue","target","length","index","checkboxes_inputvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_529eea29_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_529eea29_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_1_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_1_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","module","exports","props","type","String","required","default","Number","Boolean","collection","newItem","relation","fields","values"],"mappings":"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","file":"js/chunk-b3a5f90c.e8563c60.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('draggable',{staticClass:\"interface-checkboxes\",class:{ draggable: _vm.options.draggable, single: _vm.options.single },attrs:{\"element\":\"div\",\"animation\":\"200\",\"ghost-class\":\"ghost\",\"draggable\":_vm.options.draggable ? '.sortable-box.sortable' : false},on:{\"end\":_vm.saveSort},model:{value:(_vm.sortableList),callback:function ($$v) {_vm.sortableList=$$v},expression:\"sortableList\"}},[_vm._l((_vm.sortableList),function(item){return [(item.custom)?_c('div',{key:item.id,staticClass:\"sortable-box custom-value\",class:{ sortable: _vm.options.draggable, checked: _vm.customChecked }},[_c('button',{on:{\"click\":_vm.toggleCustom}},[_c('v-icon',{attrs:{\"name\":_vm.customChecked ? 'check_box' : 'check_box_outline_blank'}})],1),_c('input',{attrs:{\"placeholder\":_vm.$t('other') + '...'},domProps:{\"value\":_vm.customValue},on:{\"input\":_vm.updateCustom}})]):_c('v-checkbox',{key:item.id,staticClass:\"sortable-box\",class:{ sortable: _vm.options.draggable },attrs:{\"id\":item.id + '-' + item.val,\"name\":\"list-sorting\",\"value\":item.val,\"disabled\":_vm.readonly,\"label\":item.label,\"checked\":_vm.selection.includes(item.val)},on:{\"change\":function($event){return _vm.updateValue(item.val, $event)}}})]})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <draggable\n    v-model=\"sortableList\"\n    element=\"div\"\n    class=\"interface-checkboxes\"\n    :class=\"{ draggable: options.draggable, single: options.single }\"\n    animation=\"200\"\n    ghost-class=\"ghost\"\n    :draggable=\"options.draggable ? '.sortable-box.sortable' : false\"\n    @end=\"saveSort\"\n  >\n    <template v-for=\"item in sortableList\">\n      <div\n        v-if=\"item.custom\"\n        :key=\"item.id\"\n        class=\"sortable-box custom-value\"\n        :class=\"{ sortable: options.draggable, checked: customChecked }\"\n      >\n        <button @click=\"toggleCustom\">\n          <v-icon :name=\"customChecked ? 'check_box' : 'check_box_outline_blank'\" />\n        </button>\n        <input :value=\"customValue\" :placeholder=\"$t('other') + '...'\" @input=\"updateCustom\" />\n      </div>\n\n      <v-checkbox\n        v-else\n        :id=\"item.id + '-' + item.val\"\n        :key=\"item.id\"\n        name=\"list-sorting\"\n        class=\"sortable-box\"\n        :class=\"{ sortable: options.draggable }\"\n        :value=\"item.val\"\n        :disabled=\"readonly\"\n        :label=\"item.label\"\n        :checked=\"selection.includes(item.val)\"\n        @change=\"updateValue(item.val, $event)\"\n      />\n    </template>\n  </draggable>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport shortid from \"shortid\";\n\nexport default {\n  name: \"InterfaceCheckboxes\",\n  mixins: [mixin],\n\n  data() {\n    return {\n      sortableList: [],\n      customValue: \"\",\n      customChecked: false\n    };\n  },\n\n  computed: {\n    // The currently saved selection. It's this.value converted to an array, and\n    // adjusted for the wrapped `,` characters if applicable\n    selection() {\n      if (!this.value) return [];\n\n      const value = _.clone(this.value);\n      let selection;\n\n      // Convert the value to an array\n      if (typeof this.value === \"string\") {\n        selection = value.split(\",\");\n      } else {\n        selection = value;\n      }\n\n      if (this.options.wrap) {\n        selection.pop();\n        selection.shift();\n      }\n\n      return selection;\n    }\n  },\n\n  created() {\n    const options = Object.keys(this.options.choices).map(key => ({\n      val: key,\n      label: this.options.choices[key]\n    }));\n\n    let sortableOptions;\n\n    if (this.options.allow_other) {\n      // The user's customly added value is the one value in the selection that doesn't have a preconfigured\n      // label associated with it.\n      const customValue = this.selection.filter(\n        val => Object.keys(this.options.choices).includes(val) === false\n      )[0];\n\n      if (customValue) {\n        this.customValue = customValue;\n        this.customChecked = true;\n      }\n    }\n\n    if (this.options.draggable) {\n      // Convert the selected items and the choices into an array sorted by the\n      // manual sort of the user.\n      const selected = this.selection\n        // Filter out the custom option so we don't add it double down below\n        .filter(val => val !== this.customValue)\n        .map(val => ({\n          val: val,\n          label: this.options.choices[val]\n        }));\n\n      const optionsWithoutSelection = options.filter(\n        option => this.selection.includes(option.val) === false\n      );\n\n      sortableOptions = [...selected, ...optionsWithoutSelection];\n    } else {\n      sortableOptions = options;\n    }\n\n    // Add a unique ID to each sortable option so we can use that to key the items in the template\n    sortableOptions = sortableOptions.map(item => ({\n      ...item,\n      id: shortid.generate(),\n      custom: this.customValue === item.val\n    }));\n\n    if (this.options.allow_other) {\n      sortableOptions.push({\n        id: shortid.generate(),\n        custom: true\n      });\n    }\n\n    this.sortableList = sortableOptions;\n  },\n\n  methods: {\n    updateValue(val) {\n      let selection = _.clone(this.selection);\n\n      if (selection.includes(val)) {\n        selection.splice(selection.indexOf(val), 1);\n      } else {\n        selection.push(val);\n      }\n\n      if (this.options.wrap) {\n        selection = [\"\", ...selection, \"\"];\n      }\n\n      this.$emit(\"input\", selection);\n    },\n\n    saveSort() {\n      const selection = _.clone(this.selection);\n\n      let staged = this.sortableList\n        // Get all the values of the sorted available checkboxes\n        .map(s => {\n          if (s.custom) return this.customValue;\n          return s.val;\n        })\n        // Only leave the ones that are selected\n        .filter(s => selection.includes(s));\n\n      if (this.options.wrap) {\n        staged = [\"\", ...staged, \"\"];\n      }\n\n      return this.$emit(\"input\", staged);\n    },\n\n    updateCustom(event) {\n      const currentValue = _.clone(this.customValue);\n      const newValue = event.target.value;\n\n      if (newValue.length === 0) {\n        this.customValue = null;\n        this.customChecked = false;\n      } else {\n        this.customValue = newValue;\n        this.customChecked = true;\n      }\n\n      let selection = _.clone(this.selection);\n\n      if (selection.includes(currentValue)) {\n        const index = selection.indexOf(currentValue);\n        selection[index] = newValue;\n      } else {\n        selection = [...selection, newValue];\n      }\n\n      if (this.options.wrap) {\n        selection = [\"\", ...selection, \"\"];\n      }\n\n      this.$emit(\"input\", selection);\n    },\n\n    toggleCustom() {\n      this.customChecked = !this.customChecked;\n\n      let selection = _.clone(this.selection);\n      const customValue = _.clone(this.customValue);\n\n      if (this.customChecked && customValue.length > 0) {\n        selection = [...selection, customValue];\n      } else {\n        selection = selection.filter(val => val !== customValue);\n      }\n\n      if (this.options.wrap) {\n        selection = [\"\", ...selection, \"\"];\n      }\n\n      this.$emit(\"input\", selection);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.interface-checkboxes {\n  width: var(--width-x-large);\n  max-width: 100%;\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: repeat(1, 1fr);\n\n  @media only screen and (min-width: 330px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media only screen and (min-width: 480px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media only screen and (min-width: 800px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n\n.single {\n  grid-template-columns: repeat(1, 1fr);\n}\n\n.sortable-box {\n  position: relative;\n  transition: opacity var(--medium) var(--transition),\n    background-color var(--slow) var(--transition);\n}\n\n.sortable {\n  margin-left: 12px; // To make space to show the drag handle\n\n  &:after {\n    position: absolute;\n    font-family: \"Material Icons\", sans-serif;\n    display: inline-block;\n    line-height: 1;\n    letter-spacing: normal;\n    vertical-align: middle;\n    content: \"drag_indicator\";\n    height: 100%;\n    width: 24px;\n    font-size: 24px;\n    left: -20px;\n    color: var(--lighter-gray);\n    cursor: grab;\n    top: 0;\n  }\n}\n\n.custom-value {\n  display: flex;\n\n  input {\n    border: 0;\n    border-bottom: 1px solid var(--gray);\n    width: 100%;\n    margin-left: 4px; // align optically\n    height: 22px; // align optically with icon height\n  }\n\n  input:hover {\n    border-color: var(--darker-gray);\n  }\n\n  input:focus {\n    border-color: var(--darkest-gray);\n  }\n\n  input::placeholder {\n    color: var(--light-gray);\n  }\n\n  i {\n    color: var(--dark-gray);\n  }\n\n  i:hover {\n    color: var(--darkest-gray);\n  }\n\n  &.checked {\n    i {\n      color: var(--darkest-gray);\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n// The styles for the 'drop-preview' eg the ghost item that shifts around in the list to show\n// the user where the item is going to be dropped\n// NOTE: this class is added dynamically and can't be scoped in the style block above\n.ghost {\n  opacity: 0.4;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=529eea29&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=529eea29&lang=scss&scoped=true&\"\nimport style1 from \"./input.vue?vue&type=style&index=1&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"529eea29\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=529eea29&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=529eea29&lang=scss&scoped=true&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=1&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=1&lang=scss&\"","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}